{"remainingRequest":"C:\\Workspace\\electron-vue-template\\node_modules\\babel-loader\\lib\\index.js!C:\\Workspace\\electron-vue-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Workspace\\electron-vue-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Workspace\\electron-vue-template\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Workspace\\electron-vue-template\\src\\App.vue","mtime":1566781468747},{"path":"C:\\Workspace\\electron-vue-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Workspace\\electron-vue-template\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Workspace\\electron-vue-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Workspace\\electron-vue-template\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\nimport HeaderTop from '@/components/Header';\nimport { remote } from 'electron';\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nexport default {\n  components: {\n    HeaderTop: HeaderTop\n  },\n  data: function data() {\n    return {\n      url: '/'\n    };\n  },\n  created: function created() {\n    var appPath = remote.app.getAppPath();\n    var filePath = path.join(appPath, '../config/user.json').replace(/\\\\/g, '/');\n    fs.stat(filePath, function (error, stats) {\n      if (error) console.log(error);\n      var result = JSON.parse(fs.readFileSync(filePath));\n      console.log(result);\n    }); // this.$socket.sendMsg({\n    //   action: 'loginReq',\n    //   action2: 'loginRsp',\n    //   params: {\n    //     user: 'root',\n    //     password: '123456'\n    //   }\n    // }, (data) => {\n    //   console.log(data, 1)\n    // })\n  },\n  watch: {\n    $route: {\n      handler: function handler(to, from) {\n        switch (to.name) {\n          case 'Entry':\n            this.url = '/test';\n            break;\n\n          case 'Detail':\n            this.url = from.path;\n            break;\n\n          default:\n            this.url = '/';\n        }\n      },\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;AAQA,OAAA,SAAA,MAAA,qBAAA;AACA,SAAA,MAAA,QAAA,UAAA;;AAEA,IAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,EAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,GAAA,EAAA;AADA,KAAA;AAGA,GARA;AASA,EAAA,OATA,qBASA;AACA,QAAA,OAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA;AACA,QAAA,QAAA,GAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,qBAAA,EAAA,OAAA,CAAA,KAAA,EAAA,GAAA,CAAA;AACA,IAAA,EAAA,CAAA,IAAA,CAAA,QAAA,EAAA,UAAA,KAAA,EAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,QAAA,CAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,KAJA,EAHA,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA3BA;AA4BA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,OAAA,EAAA,iBAAA,EAAA,EAAA,IAAA,EAAA;AACA,gBAAA,EAAA,CAAA,IAAA;AACA,eAAA,OAAA;AACA,iBAAA,GAAA,GAAA,OAAA;AACA;;AACA,eAAA,QAAA;AACA,iBAAA,GAAA,GAAA,IAAA,CAAA,IAAA;AACA;;AACA;AACA,iBAAA,GAAA,GAAA,GAAA;AARA;AAUA,OAZA;AAaA,MAAA,IAAA,EAAA;AAbA;AADA;AA5BA,CAAA","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header-top :show-back=\"$route.meta.showBack\" :url=\"url\">INSTRUCTOR OPERATING STATION</header-top>\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/ecmascript-6\">\r\nimport HeaderTop from '@/components/Header'\r\nimport { remote } from 'electron'\r\n\r\nconst path = require('path')\r\nconst fs = require('fs')\r\nexport default {\r\n  components: {\r\n    HeaderTop\r\n  },\r\n  data () {\r\n    return {\r\n      url: '/'\r\n    }\r\n  },\r\n  created () {\r\n    const appPath = remote.app.getAppPath()\r\n    const filePath = path.join(appPath, '../config/user.json').replace(/\\\\/g, '/')\r\n    fs.stat(filePath, (error, stats) => {\r\n      if (error) console.log(error)\r\n      let result = JSON.parse(fs.readFileSync(filePath))\r\n      console.log(result)\r\n    })\r\n    // this.$socket.sendMsg({\r\n    //   action: 'loginReq',\r\n    //   action2: 'loginRsp',\r\n    //   params: {\r\n    //     user: 'root',\r\n    //     password: '123456'\r\n    //   }\r\n    // }, (data) => {\r\n    //   console.log(data, 1)\r\n    // })\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function (to, from) {\r\n        switch (to.name) {\r\n          case 'Entry':\r\n            this.url = '/test'\r\n            break\r\n          case 'Detail':\r\n            this.url = from.path\r\n            break\r\n          default:\r\n            this.url = '/'\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~@/assets/scss/index\";\r\n#app {\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n}\r\n</style>\r\n"],"sourceRoot":"src"}]}