{"remainingRequest":"C:\\Workspace\\electron-vue-template\\node_modules\\babel-loader\\lib\\index.js!C:\\Workspace\\electron-vue-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Workspace\\electron-vue-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Workspace\\electron-vue-template\\src\\views\\IOS\\Control\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Workspace\\electron-vue-template\\src\\views\\IOS\\Control\\index.vue","mtime":1566781469055},{"path":"C:\\Workspace\\electron-vue-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Workspace\\electron-vue-template\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Workspace\\electron-vue-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Workspace\\electron-vue-template\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Decrypt } from '@/lib/utils';\nimport { keyboardMixin } from '@/mixin';\nexport default {\n  mixins: [keyboardMixin],\n  data: function data() {\n    return {\n      success: true\n    };\n  },\n  methods: {\n    goto: function goto() {\n      this.$modal.show('login');\n    },\n    login: function login() {\n      var _this = this;\n\n      this.$localforage.getItem('user').then(function (data) {\n        var username = _this.$refs.username.value;\n        var password = _this.$refs.password.value;\n        var user = null;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n            if (item.username === username) {\n              user = item;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (!user) {\n          _this.$modal.show('dialog', {\n            tilte: 'Alert',\n            text: '用户不存在',\n            buttons: [{\n              title: 'Close'\n            }]\n          });\n\n          return;\n        }\n\n        var name = user.username;\n        var pass = Decrypt(user.password);\n\n        if (username === name && password === pass) {\n          _this.visible = false;\n\n          if (user.role === 1) {\n            _this.$modal.show('dialog', {\n              tilte: 'Alert',\n              text: '管理员身份登录',\n              buttons: [{\n                title: 'Close',\n                hander: function hander() {\n                  _this.$router.push('/test');\n                }\n              }]\n            });\n          } else {\n            _this.$modal.show('dialog', {\n              tilte: 'Alert',\n              text: '普通用户登录',\n              buttons: [{\n                title: 'Close',\n                hander: function hander() {\n                  _this.$router.push('/test');\n                }\n              }]\n            });\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,SAAA,OAAA,QAAA,aAAA;AACA,SAAA,aAAA,QAAA,SAAA;AACA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,aAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,MAAA,CAAA,IAAA,CAAA,OAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AAAA;;AACA,WAAA,YAAA,CAAA,OAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,QAAA,GAAA,KAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA;AACA,YAAA,QAAA,GAAA,KAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA;AACA,YAAA,IAAA,GAAA,IAAA;AAHA;AAAA;AAAA;;AAAA;AAIA,+BAAA,IAAA,8HAAA;AAAA,gBAAA,IAAA;;AACA,gBAAA,IAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,cAAA,IAAA,GAAA,IAAA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,YAAA,CAAA,IAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,YAAA,KAAA,EAAA,OADA;AAEA,YAAA,IAAA,EAAA,OAFA;AAGA,YAAA,OAAA,EAAA,CACA;AACA,cAAA,KAAA,EAAA;AADA,aADA;AAHA,WAAA;;AASA;AACA;;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,QAAA;AACA,YAAA,IAAA,GAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA;;AACA,YAAA,QAAA,KAAA,IAAA,IAAA,QAAA,KAAA,IAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,cAAA,IAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,YAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,cAAA,KAAA,EAAA,OADA;AAEA,cAAA,IAAA,EAAA,SAFA;AAGA,cAAA,OAAA,EAAA,CACA;AACA,gBAAA,KAAA,EAAA,OADA;AAEA,gBAAA,MAAA,EAAA,kBAAA;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA;AAJA,eADA;AAHA,aAAA;AAYA,WAbA,MAaA;AACA,YAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,cAAA,KAAA,EAAA,OADA;AAEA,cAAA,IAAA,EAAA,QAFA;AAGA,cAAA,OAAA,EAAA,CACA;AACA,gBAAA,KAAA,EAAA,OADA;AAEA,gBAAA,MAAA,EAAA,kBAAA;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA;AAJA,eADA;AAHA,aAAA;AAYA;AACA;AACA,OAtDA;AAuDA;AA5DA;AAPA,CAAA","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <div class=\"monitor\">\r\n      <div class=\"monitor-item\">\r\n        <span class=\"circle\" :class=\"{'is-success': success}\"></span>\r\n        <label class=\"monitor-item-title\">Control</label>\r\n      </div>\r\n      <div class=\"monitor-item\">\r\n        <span class=\"circle\" :class=\"{'is-success': success}\"></span>\r\n        <label class=\"monitor-item-title\">Control</label>\r\n      </div>\r\n      <div class=\"monitor-item\">\r\n        <span class=\"circle\" :class=\"{'is-success': success}\"></span>\r\n        <label class=\"monitor-item-title\">Control</label>\r\n      </div>\r\n      <div class=\"monitor-item\">\r\n        <span class=\"circle\" :class=\"{'is-success': success}\"></span>\r\n        <label class=\"monitor-item-title\">Control</label>\r\n      </div>\r\n      <div class=\"monitor-item\">\r\n        <span class=\"circle\" :class=\"{'is-success': success}\"></span>\r\n        <label class=\"monitor-item-title\">Control</label>\r\n      </div>\r\n    </div>\r\n    <modal name=\"login\" @before-close=\"visible=false\">\r\n      <div class=\"form-item\">\r\n        <icon-svg icon-name=\"shield-user-line\" @click.native=\"goto\"/>\r\n        <label class=\"form-item-label\" for=\"username\">User</label>\r\n        <input class=\"form-item-input\" ref=\"username\" type=\"text\" placeholder=\"User Name\" @focus=\"show\" data-layout=\"normal\" />\r\n      </div>\r\n      <div class=\"form-item\">\r\n        <icon-svg icon-name=\"shield-user-line\" @click.native=\"goto\"/>\r\n        <label class=\"form-item-label\" for=\"password\">Password</label>\r\n        <input class=\"form-item-input\" ref=\"password\" type=\"password\" placeholder=\"Password\" @focus=\"show\" data-layout=\"normal\" />\r\n      </div>\r\n      <button class=\"form-submit\" @click=\"login\">Login</button>\r\n      <vue-touch-keyboard class=\"touch-keyboard\" :options=\"options\" v-if=\"visible\" :layout=\"layout\" :cancel=\"hide\" :accept=\"accept\" :input=\"input\" :next=\"next\"/>\r\n    </modal>\r\n    <v-dialog/>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/ecmascript-6\">\r\nimport { Decrypt } from '@/lib/utils'\r\nimport { keyboardMixin } from '@/mixin'\r\nexport default {\r\n  mixins: [keyboardMixin],\r\n  data () {\r\n    return {\r\n      success: true\r\n    }\r\n  },\r\n  methods: {\r\n    goto () {\r\n      this.$modal.show('login')\r\n    },\r\n    login () {\r\n      this.$localforage.getItem('user').then((data) => {\r\n        const username = this.$refs.username.value\r\n        const password = this.$refs.password.value\r\n        let user = null\r\n        for (let item of data) {\r\n          if (item.username === username) {\r\n            user = item\r\n            break\r\n          }\r\n        }\r\n        if (!user) {\r\n          this.$modal.show('dialog', {\r\n            tilte: 'Alert',\r\n            text: '用户不存在',\r\n            buttons: [\r\n              {\r\n                title: 'Close'\r\n              }\r\n            ]\r\n          })\r\n          return\r\n        }\r\n        const name = user.username\r\n        const pass = Decrypt(user.password)\r\n        if (username === name && password === pass) {\r\n          this.visible = false\r\n          if (user.role === 1) {\r\n            this.$modal.show('dialog', {\r\n              tilte: 'Alert',\r\n              text: '管理员身份登录',\r\n              buttons: [\r\n                {\r\n                  title: 'Close',\r\n                  hander: () => {\r\n                    this.$router.push('/test')\r\n                  }\r\n                }\r\n              ]\r\n            })\r\n          } else {\r\n            this.$modal.show('dialog', {\r\n              tilte: 'Alert',\r\n              text: '普通用户登录',\r\n              buttons: [\r\n                {\r\n                  title: 'Close',\r\n                  hander: () => {\r\n                    this.$router.push('/test')\r\n                  }\r\n                }\r\n              ]\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~@/assets/scss/variable';\r\n.main {\r\n  font-size: $font-size-medium;\r\n}\r\n.monitor {\r\n  padding: 0 8px;\r\n  .circle {\r\n    margin: 0 8px;\r\n    width: 0.3rem;\r\n    height: 0.3rem;\r\n    border-radius: 100%;\r\n    background: radial-gradient(circle at 10px 10px, rgb(255, 0, 0), #000);\r\n    &.is-success {\r\n      background: radial-gradient(circle at 10px 10px, rgb(0, 255, 0), #000);\r\n    }\r\n  }\r\n  &-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0.3rem 0.2rem;\r\n    font-size: $font-size-medium;\r\n    &-title {\r\n      width: 120px;\r\n      padding: 0 10px;\r\n      letter-spacing: 2px;\r\n    }\r\n  }\r\n}\r\n.form {\r\n  &-item {\r\n    display: flex;\r\n    padding: 24px 80px;\r\n    align-items: center;\r\n    color: $color-text-d;\r\n    &-label {\r\n      flex: 1;\r\n    }\r\n    &-input {\r\n      flex: 2;\r\n      padding: 4px 8px;\r\n      border: 1px solid #000;\r\n    }\r\n  }\r\n  &-submit {\r\n    display: block;\r\n    margin: 48px auto;\r\n  }\r\n}\r\n\r\n/deep/ .touch-keyboard {\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 30px;\r\n  margin: auto;\r\n  width: 1000px;\r\n}\r\n/deep/ .v--modal-overlay {\r\n  color: #000;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/IOS/Control"}]}