{"version":3,"file":"vue-imask.js","sources":["../src/imask.component.js","../src/imask.directive.js"],"sourcesContent":["import IMask from 'imask';\r\n\r\n\r\nexport\r\nconst IMaskComponent = {\r\n  name: 'imask-input',\r\n\r\n  render (createElement) {\r\n    const props = {\r\n      domProps: {\r\n        value: this.maskRef ? this.maskRef.value : this.value\r\n      },\r\n      on: {...this.$listeners},\r\n    };\r\n\r\n    // if there is no mask use default input event\r\n    if (!this.$props.mask) {\r\n      props.on.input = event => this.$emit('input', event.target.value);\r\n    } else {\r\n      delete props.on.input;\r\n    }\r\n\r\n    return createElement('input', props);\r\n  },\r\n\r\n  mounted () {\r\n    if (!this.$props.mask) return;\r\n\r\n    this._initMask();\r\n  },\r\n\r\n  destroyed () {\r\n    this._destroyMask();\r\n  },\r\n\r\n  computed: {\r\n    maskOptions () {\r\n      return this._extractOptionsFromProps(this.$props);\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    '$props': {\r\n      handler (props) {\r\n        const maskOptions = this.maskOptions;\r\n        if (maskOptions.mask) {\r\n          if (this.maskRef) {\r\n            this.maskRef.updateOptions(maskOptions);\r\n            if ('value' in props &&\r\n              (props.value !== this._maskValue() ||\r\n                // handle cases like Number('') === 0,\r\n                // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\r\n                (typeof props.value !== 'string' && this.maskRef.value === ''))\r\n            ) {\r\n              this._updateValue();\r\n            }\r\n          } else {\r\n            this._initMask(maskOptions);\r\n            if (props.value !== this._maskValue()) this._onAccept();\r\n          }\r\n        } else {\r\n          this._destroyMask();\r\n          if ('value' in props) this.$el.value = props.value;\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    _extractOptionsFromProps (props) {\r\n      props = {...props};\r\n\r\n      // keep only defined props\r\n      Object.keys(props)\r\n        .filter(prop => props[prop] === undefined)\r\n        .forEach(undefinedProp => {\r\n          delete props[undefinedProp];\r\n        });\r\n\r\n      delete props.value;\r\n      delete props.unmask;\r\n\r\n      return props;\r\n    },\r\n\r\n    _maskValue () {\r\n      if (this.unmask === 'typed') return this.maskRef.typedValue;\r\n      if (this.unmask) return this.maskRef.unmaskedValue;\r\n      return this.maskRef.value;\r\n    },\r\n\r\n    _updateValue () {\r\n      const value = this.value == null ? '' : this.value;\r\n      if (this.unmask === 'typed') this.maskRef.typedValue = value;\r\n      else if (this.unmask) this.maskRef.unmaskedValue = value;\r\n      else this.maskRef.value = value;\r\n    },\r\n\r\n    _onAccept () {\r\n      const val = this._maskValue();\r\n      this.$emit('input', val);\r\n      this.$emit('accept', val);\r\n    },\r\n\r\n    _onComplete () {\r\n      this.$emit('complete', this._maskValue());\r\n    },\r\n\r\n    _initMask (maskOptions=this.maskOptions) {\r\n      this.maskRef = new IMask(this.$el, maskOptions)\r\n        .on('accept', this._onAccept.bind(this))\r\n        .on('complete', this._onComplete.bind(this));\r\n      this._updateValue();\r\n    },\r\n\r\n    _destroyMask () {\r\n      if (this.maskRef) {\r\n        this.maskRef.destroy();\r\n        delete this.maskRef;\r\n      }\r\n    }\r\n  },\r\n\r\n  props: {\r\n    // common\r\n    mask: {},\r\n    value: {},\r\n    unmask: {\r\n      validator: function (value) {\r\n        return value === 'typed' || typeof value === 'boolean';\r\n      }\r\n    },\r\n    prepare: Function,\r\n    validate: Function,\r\n    commit: Function,\r\n    overwrite: Boolean,\r\n\r\n    // pattern\r\n    placeholderChar: String,\r\n    lazy: Boolean,\r\n    definitions: Object,\r\n    blocks: Object,\r\n\r\n    // date\r\n    pattern: String,\r\n    format: Function,\r\n    parse: Function,\r\n    autofix: Boolean,\r\n\r\n    // number\r\n    radix: String,\r\n    thousandsSeparator: String,\r\n    mapToRadix: Array,\r\n    scale: Number,\r\n    signed: Boolean,\r\n    normalizeZeros: Boolean,\r\n    padFractionalZeros: Boolean,\r\n    min: [Number, Date],\r\n    max: [Number, Date],\r\n\r\n    // dynamic\r\n    dispatch: Function\r\n  },\r\n}\r\n","import IMask from 'imask';\r\n\r\n\r\nexport\r\nconst IMaskDirective = {\r\n  name: 'imask',\r\n\r\n  bind (el, {value: options}) {\r\n    if (!options) return;\r\n\r\n    initMask(el, options);\r\n  },\r\n\r\n  update (el, {value: options}) {\r\n    if (options) {\r\n      if (el.maskRef) el.maskRef.updateOptions(options);\r\n      else initMask(el, options);\r\n    } else {\r\n      destroyMask(el);\r\n    }\r\n  },\r\n\r\n  unbind (el) {\r\n    destroyMask(el);\r\n  }\r\n};\r\n\r\n\r\nfunction fireEvent (el, eventName, data) {\r\n  var e = document.createEvent('CustomEvent');\r\n  e.initCustomEvent(eventName, true, true, data);\r\n  el.dispatchEvent(e);\r\n}\r\n\r\nfunction initMask (el, opts) {\r\n  el.maskRef = new IMask(el, opts)\r\n    .on('accept', () => {\r\n      fireEvent(el, 'accept', el.maskRef);\r\n    })\r\n    .on('complete', () => {\r\n      fireEvent(el, 'complete', el.maskRef);\r\n    });\r\n}\r\n\r\nfunction destroyMask (el) {\r\n  if (el.maskRef) {\r\n    el.maskRef.destroy();\r\n    delete el.maskRef;\r\n  }\r\n}\r\n"],"names":["IMaskComponent","name","render","createElement","props","domProps","value","maskRef","on","$listeners","$props","mask","input","event","$emit","target","mounted","_initMask","destroyed","_destroyMask","computed","maskOptions","_extractOptionsFromProps","watch","handler","updateOptions","_maskValue","_updateValue","_onAccept","$el","deep","methods","Object","keys","filter","prop","undefined","forEach","undefinedProp","unmask","typedValue","unmaskedValue","val","_onComplete","IMask","bind","destroy","validator","prepare","Function","validate","commit","overwrite","Boolean","placeholderChar","String","lazy","definitions","blocks","pattern","format","parse","autofix","radix","thousandsSeparator","mapToRadix","Array","scale","Number","signed","normalizeZeros","padFractionalZeros","min","Date","max","dispatch","IMaskDirective","el","options","initMask","update","destroyMask","unbind","fireEvent","eventName","data","e","document","createEvent","initCustomEvent","dispatchEvent","opts"],"mappings":"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"}